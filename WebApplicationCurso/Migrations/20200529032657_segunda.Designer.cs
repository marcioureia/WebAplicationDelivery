// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationCurso.Models;

namespace WebApplicationCurso.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200529032657_segunda")]
    partial class segunda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplicationCurso.Models.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoriaNome");

                    b.HasKey("Id");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cellular");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Complemento");

                    b.Property<int>("IdCliente");

                    b.Property<string>("Logradouro");

                    b.Property<int>("Numero");

                    b.Property<string>("PontoRef");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.PedidosItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("HoraPedido");

                    b.Property<int>("StatusPedido");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("PedidosItems");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<int>("CategoriaId");

                    b.Property<string>("Descricao");

                    b.Property<string>("Image");

                    b.Property<string>("Nome");

                    b.Property<int?>("PedidosItemsId");

                    b.Property<double>("Preco");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("PedidosItemsId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreate");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.Endereco", b =>
                {
                    b.HasOne("WebApplicationCurso.Models.Cliente", "Cliente")
                        .WithMany("Endereco")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.PedidosItems", b =>
                {
                    b.HasOne("WebApplicationCurso.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("WebApplicationCurso.Models.Produto", b =>
                {
                    b.HasOne("WebApplicationCurso.Models.CategoriaProduto", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplicationCurso.Models.PedidosItems")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidosItemsId");
                });
#pragma warning restore 612, 618
        }
    }
}
